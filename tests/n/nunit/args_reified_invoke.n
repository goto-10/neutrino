# Copyright 2015 the Neutrino authors (see AUTHORS).
# Licensed under the Apache License, Version 2.0 (see LICENSE).

import $assert;
import $core;

# Positional arguments.
def $pos($a, $b, $c, $d) => (1000000 * $a) + (10000 * $b) + (100 * $c) + $d;
def $cpos(*) as $args => $args.replace_argument(subject, $pos);

# Keyword arguments.
def $kwd(a: $a, b: $b, c: $c, d: $d) => (1000000 * $a) + (10000 * $b) + (100 * $c) + $d;
def $ckwd(*) as $args => $args.replace_argument(subject, $kwd);

# Reverse keyword arguments.
def $rkw(d: $d, c: $c, b: $b, a: $a) => (1000000 * $d) + (10000 * $c) + (100 * $b) + $a;
def $crkw(*) as $args => $args.replace_argument(subject, $rkw);

def $test_direct_invoke() {
  $assert:equals(03040506, module.invoke($cpos(3, 4, 5, 6)));
  $assert:equals(07080910, module.invoke($cpos(0: 7, 1: 8, 2: 9, 3: 10)));
  $assert:equals(14131211, module.invoke($cpos(3: 11, 2: 12, 1: 13, 0: 14)));
  $assert:equals(17181516, module.invoke($cpos(2: 15, 3: 16, 0: 17, 1: 18)));

  $assert:equals(19202122, module.invoke($ckwd(19, 20, 21, 22)));
  $assert:equals(23242526, module.invoke($ckwd(0: 23, 1: 24, 2: 25, 3: 26)));
  $assert:equals(30292827, module.invoke($ckwd(3: 27, 2: 28, 1: 29, 0: 30)));
  $assert:equals(33343132, module.invoke($ckwd(2: 31, 3: 32, 0: 33, 1: 34)));
  $assert:equals(35363738, module.invoke($ckwd(a: 35, b: 36, c: 37, d: 38)));
  $assert:equals(39404142, module.invoke($ckwd(a: 39, 1: 40, 2: 41, d: 42)));
  $assert:equals(46454443, module.invoke($ckwd(d: 43, c: 44, b: 45, a: 46)));

  $assert:equals(47484950, module.invoke($crkw(47, 48, 49, 50)));
  $assert:equals(51525354, module.invoke($crkw(0: 51, 1: 52, 2: 53, 3: 54)));
  $assert:equals(58575655, module.invoke($crkw(3: 55, 2: 56, 1: 57, 0: 58)));
  $assert:equals(59606162, module.invoke($crkw(d: 59, c: 60, b: 61, a: 62)));
  $assert:equals(66656463, module.invoke($crkw(a: 63, b: 64, c: 65, d: 66)));
}

def ($a).blah($b) as $args => $args;

def $test_op_invoke() {
  $assert:equals(2, module.invoke((1 .blah 1).replace_argument(selector, op+())));
  $assert:equals(3, module.invoke((4 .blah 1).replace_argument(selector, op-())));
}

do {
  $test_direct_invoke();
  $test_op_invoke();
}
