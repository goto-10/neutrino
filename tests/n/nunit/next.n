# Copyright 2014 the Neutrino authors (see AUTHORS).
# Licensed under the Apache License, Version 2.0 (see LICENSE).

import $assert;
import $core;

type @A;
type @B is @A;
type @C is @B;

def ($this).prop => "*";
def ($this is @A).prop => "A";
def ($this is @B).prop => "B";
def ($this is @C).prop => "C";
def ($this is @core:String).prop => "String";
def ($this == "foo").prop => "foo";

def ($this is @A).also($this is @A) => "AA";
def ($this is @A).also($this is @B) => "AB";
def ($this is @A).also($this is @C) => "AC";
def ($this is @B).also($this is @A) => "BA";
def ($this is @B).also($this is @B) => "BB";
def ($this is @B).also($this is @C) => "BC";
def ($this is @C).also($this is @A) => "CA";
def ($this is @C).also($this is @B) => "CB";
def ($this is @C).also($this is @C) => "CC";

def $test_simple_next() {
  def $c := @core:manager.new_instance(@C);
  $assert:equals("C", $c.prop);
  $assert:equals("B", (next $c is @C).prop);
  $assert:equals("A", (next $c is @B).prop);
  $assert:equals("*", (next $c is @A).prop);
  $assert:equals("foo", "foo".prop);
  $assert:equals("String", (next "foo" == "foo").prop);
  $assert:equals("*", (next "foo" is @core:String).prop);
}

def $test_multi_next() {
  def $c := @core:manager.new_instance(@C);
  $assert:equals("CC", $c .also $c);
  $assert:equals("BC", (next $c is @C) .also $c);
  $assert:equals("AC", (next $c is @B) .also $c);
  $assert:equals("CB", $c .also (next $c is @C));
  $assert:equals("BB", (next $c is @C) .also (next $c is @C));
  $assert:equals("AB", (next $c is @B) .also (next $c is @C));
  $assert:equals("CA", $c .also (next $c is @B));
  $assert:equals("BA", (next $c is @C) .also (next $c is @B));
  $assert:equals("AA", (next $c is @B) .also (next $c is @B));
}

do {
  $test_simple_next();
  $test_multi_next();
}
