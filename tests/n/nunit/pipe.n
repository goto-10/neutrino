# Copyright 2015 the Neutrino authors (see AUTHORS).
# Licensed under the Apache License, Version 2.0 (see LICENSE).

import $assert;
import $core;

def $to_str($blob) => @core:Ascii.string_from($blob);

def $test_simple() {
  def $pipe := new @core:io:Pipe();
  def $p_write := $pipe.out.write!("Hello, World!".view(@core:Ascii));
  $assert:not($p_write.is_settled?);
  when def $v := $p_write
    do $assert:equals(13, $v);
  def $p_read_1 := $pipe.in.read!(5);
  $assert:not($p_read_1.is_settled?);
  when def $v := $p_read_1
    do $assert:equals("Hello", $to_str($v));
  def $p_read_2 := $pipe.in.read!(2);
  $assert:not($p_read_2.is_settled?);
  when def $v := $p_read_2
    do $assert:equals(", ", $to_str($v));
  def $p_read_3 := $pipe.in.read!(6);
  $assert:not($p_read_3.is_settled?);
  when def $v := $p_read_3
    do $assert:equals("World!", $to_str($v));
}

do {
  $test_simple();
}
