# Copyright 2014 the Neutrino authors (see AUTHORS).
# Licensed under the Apache License, Version 2.0 (see LICENSE).

import $assert;
import $core;

def $test_simple_promise() {
  def $p := @core:Promise.pending();
  $assert:equals(false, $p.is_settled?);
  $assert:equals(18, try $p.get() on.promise_not_settled($q) => 18);
  $assert:equals(19, $p.fulfill!(19));
  $assert:equals(true, $p.is_settled?);
  $assert:equals(19, $p.get());
  $assert:equals(21, $p.fulfill!(21));
  $assert:equals(19, $p.get());
}

def $test_fail() {
  def $p := @core:Promise.defer(fn => leave.ouch!(a: 5, c: 2, b: 9));
  $p.on(fn.ouch!(a: $a, b: $b, c: $c) {
    $assert:equals(5, $a);
    $assert:equals(9, $b);
    $assert:equals(2, $c);
  });
}

do {
  $test_simple_promise();
  $test_fail();
}
