# Copyright 2013 the Neutrino authors (see AUTHORS).
# Licensed under the Apache License, Version 2.0 (see LICENSE).

import $assert;
import $collection;
import $core;

def $test_raw_interval() {
  def $int := new @collection:Interval(0, 19);
  var $count := 0;
  var $sum := 0;
  for $elm in $int do {
    $count := $count + 1;
    $sum := $sum + $elm;
  }
  $assert:equals(19, $count);
  $assert:equals(171, $sum);
}

def $test_shorthand() {
  var $count := 0;
  var $sum := 0;
  for $i in (0 .to 27) do {
    $count := $count + 1;
    $sum := $sum + $i;
  }
  $assert:equals(27, $count);
}

def $test_collection() {
  def $c10 := (0 .to 10);
  $assert:equals(10, $c10.size);
  $assert:not($c10.is_empty?);
  def $c0 := (0 .to 0);
  $assert:equals(0, $c0.size);
  $assert:that($c0.is_empty?);
  def $c5 := (5 .to 10);
  $assert:equals(5, $c5.size);
  $assert:not($c5.is_empty?);
  $assert:equals(5, $c5[0]);
  $assert:equals(9, $c5[4]);
  $assert:equals(5, try $c5[5] on.out_of_bounds($i) => $i);
}

do {
  $test_raw_interval();
  $test_shorthand();
  $test_collection();
}
