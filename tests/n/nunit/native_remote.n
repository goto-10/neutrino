# Copyright 2015 the Neutrino authors (see AUTHORS).
# Licensed under the Apache License, Version 2.0 (see LICENSE).

import $assert;
import $core;

def $test_time() {
  def $current_p := @core:time->current();
  $assert:not($current_p.is_resolved?);
  $current_p.then(fn $value => $assert:that($value > 0));
}

def $test_unknown() {
  $assert:equals(op.blargh(), try @core:time->blargh() on.unknown_native_method($s) => $s);
}

def $run_echo_test($in) {
  # Test round-tripping through a remote call.
  @core:echo->echo($in).then(fn $out => $assert:equals($in, $out));
}

def $test_echo() {
  $run_echo_test(946);
  $run_echo_test("hey");
  $run_echo_test("oof!");
  $run_echo_test(true);
  $run_echo_test(false);
  $run_echo_test(null);
}

do {
  $test_time();
  $test_echo();
  $test_unknown();
}
