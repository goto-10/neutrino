# Copyright 2013 the Neutrino authors (see AUTHORS).
# Licensed under the Apache License, Version 2.0 (see LICENSE).

import os.path

file_names = [
  "assert.gn",
  "builtins.gn",
  "functions.gn",
  "import.gn",
  "lambda.gn",
  "local-declarations.gn",
  "methods.gn",
  "methodspace-declarations.gn",
  "multiline.gn",
  "namespace-declarations.gn",
  "simple.gn",
  "stages.gn",
  "tags.gn",
]

test_lib_files = [
  "test.n"
]

compiler = get_external("src", "python", "neutrino", "main.py")
runner = wrap_source_file(get_root().get_child("src", "sh", "run-golden-test.sh"))
ctrino = get_external("src", "c", "ctrino")
library = get_external("src", "n", "library")

suite = get_group("suite")

for file_name in file_names:
  source_file = get_source_file(file_name)
  test_case = test.get_exec_test_case(file_name)
  test_case.set_runner(runner)
  n_modules = get_external("src", "n", "files").get_input_paths()
  test_modules = [get_source_file("test.n").get_input_file().get_path()]
  test_case.set_arguments(
    "-t", source_file.get_input_file().get_path(),
    "-e", ctrino.get_output_path(),
    "-l", library.get_output_path(),
    "-m", '"%s"' % " ".join(n_modules + test_modules)
  )
  test_case.add_dependency(source_file)
  test_case.add_dependency(ctrino)
  test_case.add_dependency(library)
  suite.add_member(test_case)

#   (filename, ext) = os.path.splitext(file_name)
#   module = n.get_library(filename)
#   module.set_compiler(compiler)
#   module.add_source(source_file)
#   suite.add_member(module)# 

# test_case = test.get_exec_test_case(test_file_name)
#   test_case.set_runner(test_main)
#   stripped_test_case_name = re.match(r"test_(\w+).c", test_file_name).group(1)
#   test_case.set_arguments(stripped_test_case_name)
#   run_tests.add_member(test_case)# 
# 

# # Run a golden test using the test runner script.
# $(GOLDEN_OUTS):$(OUT)/tests/n/golden/%.out:tests/n/golden/%.gn $(C_MAIN_EXE) $(PYTHON_SRC_FILES) $(GOLDEN_MODULES) $(CORE_LIBRARY_OUT)
#   @echo -n Running golden test "$*: "
#   @mkdir -p $(shell dirname $@)
#   @./src/sh/run-golden-test.sh                                                 \
#     -t "$<"                                                                    \
#     -o "$@"                                                                    \
#     -e "$(EXEC_PREFIX) $(C_MAIN_EXE)"                                          \
#     -m "$(GOLDEN_MODULES)"                                                     \
#     -l "$(CORE_LIBRARY_OUT)"