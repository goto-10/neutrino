# Copyright 2014 the Neutrino authors (see AUTHORS).
# Licensed under the Apache License, Version 2.0 (see LICENSE).

## The built-in type of runtime-native object arrays.
def @ModuleFragmentPrivate := @ctrino.get_builtin_type("ModuleFragmentPrivate");

## Creates a new type with the given display name.
@ctrino.builtin("module_fragment_private.new_type")
def ($this is @ModuleFragmentPrivate).new_type($display_name);

## Creates a new hard field key with the given display name.
@ctrino.builtin("module_fragment_private.new_hard_field")
def ($this is @ModuleFragmentPrivate).new_hard_field($display_name);

## Creates a new soft field key with the given display name.
@ctrino.builtin("module_fragment_private.new_soft_field")
def ($this is @ModuleFragmentPrivate).new_soft_field($display_name);

def @CallLiteral := @ctrino.get_builtin_type("CallData");

## Executes the given call in the module fragment represented by this object.
@ctrino.builtin("module_fragment_private.invoke_call_data")
def ($this is @ModuleFragmentPrivate).invoke($call is @CallLiteral);

@ctrino.builtin("module_fragment_private.invoke_reified_arguments")
def ($this is @ModuleFragmentPrivate).invoke($call is @ReifiedArguments);

def ($this is @ModuleFragmentPrivate).invoke(subject: $subj, $args)
  => $this.invoke($args.replace_argument(subject, $subj));

@ctrino.builtin("module_fragment_private.leave_reified_arguments")
def ($this is @ModuleFragmentPrivate).leave($call is @ReifiedArguments);
